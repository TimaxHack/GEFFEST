#include "ServoSmooth.h"
ServoSmooth servo1;
ServoSmooth servo1_2;
ServoSmooth servo1_3;
ServoSmooth servo2;
ServoSmooth servo2_2;
ServoSmooth servo3;
ServoSmooth servo4;
ServoSmooth servo5;
uint32_t myTimer;
void setup() {
  Serial.begin(9600);
  servo1.attach(2, 600, 2400); 
  servo1_2.attach(3, 600, 2400);
  servo1_3.attach(5, 600, 2400); 
  servo2.attach(6, 600, 2400);
  servo2_2.attach(7, 600, 2400); 
  servo3.attach(8, 600, 2400);
  servo4.attach(9, 600, 2400); 
  servo5.attach(10, 600, 2400);
  
  
  
  
  
  // 600 и 2400 - длины импульсов, при которых
  // серво поворачивается максимально в одну и другую сторону, зависят от самой серво
  // и обычно даже указываются продавцом. Мы их тут указываем для того, чтобы
  // метод setTargetDeg() корректно отрабатывал диапазон поворота сервы
  servo1.setSpeed(90);   // ограничить скорость
  servo1.setAccel(0.1);  // установить ускорение (разгон и торможение)
}
void loop() {
 /* int vrach = random(180); 
  int plecho = random(180);
  int plecho1 = 180 - random(180);
  int lokot = random(180);
  int k_vrach = random(180);
  int k_sgib = random(180);
  int k_cshin = random(180);
*/

  //delay(2000);
  // желаемая позиция задаётся методом setTarget (импульс) или setTargetDeg (угол), далее
  // при вызове tick() производится автоматическое движение сервы
  // с заданным ускорением и ограничением скорости
  boolean state1 = servo1.tick();
  boolean state1_2 = servo1_2.tick();
  boolean state1_3 = servo1_3.tick();
  boolean state2 = servo2.tick();
  boolean state2_2 = servo2_2.tick();
  boolean state3 = servo3.tick();
  boolean state4 = servo4.tick();
  boolean state5 = servo5.tick();// здесь происходит движение серво по встроенному таймеру!
  int newPos1 = map(analogRead(A2), 0, 1023, 500, 2400);
    int newPos2 = map(analogRead(A3), 0, 1023, 500, 2400);
    int newPos3 = map(analogRead(A4), 0, 1023, 500, 2400);
    int newPos4 = map(analogRead(A5), 0, 1023, 500, 2400);
    int newPos5 = map(analogRead(A6), 0, 1023, 500, 2400);
   
  if (millis() - myTimer >= 40) {

    myTimer = millis();
    /*int newPos1 = map(analogRead(A2), 0, 1023, 500, 2400);
    int newPos2 = map(analogRead(A3), 0, 1023, 500, 2400);
    int newPos3 = map(analogRead(A4), 0, 1023, 500, 2400);
    int newPos4 = map(analogRead(A5), 0, 1023, 500, 2400);
    int newPos5 = map(analogRead(A6), 0, 1023, 500, 2400);
    // берём с потенцометра значение 500-2400 (импульс)
*/

    servo1.setTarget(newPos1);
    servo1_2.setTarget(newPos1);
    servo1_3.setTarget(newPos1);
    servo2.setTarget(newPos2);
    servo2_2.setTarget(180 - newPos2);
    servo3.setTarget(newPos3);
    servo4.setTarget(newPos4);
    servo5.setTarget(newPos5);
    Serial.print(newPos1);
   Serial.print("\t");
   Serial.print(newPos2);
   Serial.print("\t");
   Serial.print(180 - newPos2);
   Serial.print("\t");
   Serial.print(newPos3);
   Serial.print("\t");
   Serial.print(newPos4);
   Serial.print("\t");
   Serial.println(newPos5); 
   


    //delay(2000);
    
    
    // и отправляем на серво
    //Serial.println(String(newPos) + " " + String(servo1.getCurrent())/* + " " + String(state)*/);
    //Serial.println(String(newPos) + " " + String(servo1.getCurrent())/* + " " + String(state)*/);
  // state показывает сотояние сервы (0 - движется, 1 - приехали и отключились)
  }
}





